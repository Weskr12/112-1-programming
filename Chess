#include<stdio.h>

int chess[9][9]={   {0,2,0,2,0,2,0,0},
                    {0,0,1,1,1,0,0,0},
                    {0,2,1,0,1,2,0,0},
                    {0,0,1,1,1,0,0,0},
                    {0,2,0,1,1,2,0,0},
                    {0,0,0,2,0,0,0,0},
                    {0,0,0,0,0,0,0,0},
                    {0,0,0,0,0,0,0,0}};
int ans_x_y[8][3]={{0,0,0},
                  {0,0,0},
                  {0,0,0},
                  {0,0,0},
                  {0,0,0},
                  {0,0,0},
                  {0,0,0},
                  {0,0,0}};

int finding(int pos_x,int pos_y,int pos_color,int reverse_color);

int In_chess(int x,int y,int i,int j);

int main(){

    int pos_x=0,pos_y=0,pos_color=0,reverse_color=0;

    scanf("%d%d%d",&pos_x,&pos_y,&pos_color);
//    |~~~~~~~~~~~~~~~~~~~~~~~~reveresecolor~~~~~~~~~~~~~~~~~~~~~~~~|
    if(pos_color==1){
        reverse_color=2;
    }
    else if(pos_color==2){
        reverse_color=1;
    }
//    |~~~~~~~~~~~~~~~~~~~~~~~~Q1~~~~~~~~~~~~~~~~~~~~~~~~|
    if(chess[pos_x][pos_y]==0){
        printf("its empty\n");
    }
    else if(chess[pos_x][pos_y]==1){
        printf("its black");
    }
    else{
        printf("its white");
    }

//    |~~~~~~~~~~~~~~~~~~~~~~~~Q2~~~~~~~~~~~~~~~~~~~~~~~~|
    int find=1;
    while(find){
    if(chess[pos_x][pos_y]==0){
        finding(pos_x,pos_y,pos_color,reverse_color);
        for(int k=0;k<8;k++)
            printf("ans:%d move position:(%d,%d)\n",ans_x_y[k][0],ans_x_y[k][1],ans_x_y[k][2]);
        scanf("%d",&find);
        }

    }

}

int In_chess(int x,int y, int i,int j){
    if((i!=0 && x<8 && x>0)&&j==0){//垂直方向就算在邊邊（y=0,y=7也可判斷）

        return 1;
    }
    else if((j!=0 && y<8 && y>0)&&i==0){//水平...
        return 1;
    }
    else if((i!=0 && x<8 && x>0)&&(j!=0 && y<8 && y>0)){//斜角
        return 1;
    }
    else{
        return 0;
    }
}

int finding(int pos_x,int pos_y,int pos_color,int reverse_color){
int k=0;
    for(int i=-1;i<2;i++){
        for(int j=-1;j<2;j++){
            int x=pos_x;
            int y=pos_y;
            int last=0;

            while(In_chess(x,y,i,j)){


                if(chess[x+i][y+j]==reverse_color){

                    last=reverse_color;
                }
                else if(chess[x+i][y+j]==pos_color){
                    if(last==reverse_color){//遇上同色then如果上個棋子是反色代表可以下
                        printf("reverse%d\n",reverse_color);
                        printf("%d\n",pos_color);
                        ans_x_y[k][0]=1;//儲存是否可以放置
                        ans_x_y[k][1]=x+i;//落子的位置
                        ans_x_y[k][2]=y+j;//落子的位置

                        break;

                    }
                }
                else if(chess[x+i][y+j]==0){
                    break;
                }



                x=x+i;
                y=y+j;



            }
            if(i!=0||j!=0){
                k++;
            }

            printf("\n(%d,%d)\n",i,j);
        }
    }
    return 0;

}


